name: PyPI 📦 Distribution

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows, macos ]

    runs-on: ${{ matrix.os }}-latest
    name: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: '🐍 Set up Python'
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: '🛠️ Install dependencies'
      run: |
        pip install build

    - name: '🚧 Build distribution'
      run: |
        cd bindings/python
        python -m build -w

    - name: '📤 Upload artifact'
      uses: actions/upload-artifact@v3
      with:
         path: ${{ github.workspace }}/bindings/python/dist/*

  cross:
    strategy:
      fail-fast: false
      matrix:
        target: [ i686, x86_64, aarch64 ]

    name: manylinux2014_${{ matrix.target }}
    runs-on: ubuntu-latest
    container: messense/manylinux2014-cross:${{ matrix.target }}

    steps:
    - uses: actions/checkout@v3

    - name: '🦀️ Set up Rust'
      uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}-unknown-linux-gnu

    - name: '🛠️ Install dependencies'
      run: |
        apt install -y pkg-config
        pip install setuptools-rust setuptools_scm

    - name: '🚧 Build distribution'
      run: |
        cd bindings/python
        python setup.py bdist_wheel --plat-name=manylinux2014_${{ matrix.target }}

    - name: '📤 Upload artifact'
      uses: actions/upload-artifact@v3
      with:
         path: ${{ github.workspace }}/bindings/python/dist/*

  publish:
    needs: [build, cross]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: '📦 Publish distribution to PyPI'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_pass }}
